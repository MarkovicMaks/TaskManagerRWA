@model WebApp.ViewModels.SearchVM

@{
    ViewData["Title"] = "Index";
}

<h1>Tasks</h1>

@if (User.IsInRole("Admin") || User.IsInRole("Menager"))
{
    <p>
        <a asp-action="Create" class="btn btn-success">Create New</a>
    </p>
}

<form asp-action="Search" method="GET">
    <div class="row">
        <div class="col-8">
            <input asp-for="Q" class="form-control" placeholder="Search Tasks" />
        </div>
        <div class="col-auto">
            <label class="form-label mt-1">Sort by:</label>
        </div>
        <div class="col-auto">
            <select asp-for="OrderBy" class="form-select">
                <option value="id">(default)</option>
                <option>Title</option>
                <option>Status</option>
                <option>Manager</option>
            </select>
        </div>
        <div class="col-auto">
            <select asp-for="Size" class="form-select">
                <option>5</option>
                <option>10</option>
                <option>20</option>
                <option>50</option>
            </select>
        </div>
        <div class="col-auto">
            <input type="submit" value="Go" name="submit" class="btn btn-outline-success" />
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().ManagerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Status)
            </th>
            <th></th>
            <th></th>
            <th></th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Tasks)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)

                    
                    
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManagerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>@Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-success" })</td>
                

                @if (User.IsInRole("Admin") || User.IsInRole("Menager"))
                {
                    <td>@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })</td>
                }
                else if (User.IsInRole("Employee"))
                {
                    @if (ViewBag.AssignedTaskIds != null && ((List<int>)ViewBag.AssignedTaskIds).Contains(item.Id))
                    {
                        <td>
                            <span class="badge bg-warning text-dark">Assigned</span>
                        </td>
                    }
                    else{
                        <td>
                            @Html.ActionLink("Take", "Create", "TaskAssignment", new { taskId = item.Id }, new { @class = "btn btn-outline-success" })
                        </td>
                    }
                    
                }
            </tr>
        }
    </tbody>

</table>
<nav>
    <ul class="pagination ">
        @for (int i = Model.FromPager; i <= Model.ToPager; i++)
        {
            var linkText = @i.ToString();
            if (i != 1 && i == Model.FromPager)
            {
                linkText = "«";
            }
            else if (i != Model.LastPage && i == Model.ToPager)
            {
                linkText = "»";
            }

            var linkClass = "page-item";
            if (i == Model.Page)
            {
                linkClass = "page-item active";
            }
            <li class="@linkClass">
                @Html.ActionLink(
                         @linkText,
                         "Search",
                         new
                         {
                             q = Model.Q,
                             orderby = Model.OrderBy,
                             page = i,
                             size = Model.Size
                         },
                         new { @class = "page-link" })
            </li>
        }
    </ul>
</nav>
