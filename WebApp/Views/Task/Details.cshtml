@model WebApp.ViewModels.TaskVm

@{
    ViewData["Title"] = "Details";
}

<h1>Task Details</h1>

<div>
    <h4>Task Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Task ID:</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Id)</dd>

        <dt class="col-sm-2">Manager:</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ManagerName)</dd>

        <dt class="col-sm-2">Title:</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Title)</dd>

        <dt class="col-sm-2">Description:</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Description)</dd>

        @* Add time since creation *@

        <dt class="col-sm-2">Status:</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Status)</dd>

        <dt class="col-sm-2">Assigned Skills:</dt>
        <dd class="col-sm-10">
            @if (Model.AssignedSkills != null && Model.AssignedSkills.Any())
            {
                <ul>
                    @foreach (var skill in Model.AssignedSkills)
                    {
                        <li>@skill</li>
                    }
                </ul>
            }
            else
            {
                <p>No skills assigned.</p>
            }
        </dd>
    </dl>
</div>

<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-warning" }) |
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>
